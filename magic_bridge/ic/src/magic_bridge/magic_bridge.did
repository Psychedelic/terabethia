type CreateCanisterParam = record {
  cap : principal;
  fee : nat;
  decimals : nat8;
  controllers : vec principal;
  fee_to : principal;
  owner : principal;
  logo : text;
  name : text;
  cycles : nat64;
  token_type : TokenType;
  total_supply : nat;
  symbol : text;
};
type FactoryError = variant {
  CanisterStatusNotAvailableError : opt principal;
  CreateCanisterError : opt principal;
  EncodeError : opt principal;
  CodeAlreadyInstalled : opt principal;
  InstallCodeError : opt principal;
};
type InstallCodeError = variant {
  CanisterStatusNotAvailableError;
  EncodeError;
  CanisterDoesNotExistError;
  InstallCodeError : text;
};
type Result = variant { Ok : principal; Err : FactoryError };
type Result_1 = variant { Ok : principal; Err : InstallCodeError };
type TokenStatus = variant {
  Stopped;
  Stopping;
  Running;
  NotCreated;
  Created;
  Installed;
};
type TokenType = variant { DIP20; DIP721 };
service : {
  authorize : (principal) -> ();
  create : (TokenType, vec nat) -> (Result);
  flush_failed_registrations : () -> ();
  get_all : () -> (vec record { principal; opt principal; TokenStatus }) query;
  get_canister : (principal) -> (opt principal) query;
  get_failed_registrations : () -> (
      vec record { principal; record { CreateCanisterParam; nat8 } },
    ) query;
  upgrade_code : (principal, TokenType) -> (Result_1);
}